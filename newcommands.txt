docker rm -f -v $(docker ps -q)
systemctl stop kubelet
systemctl stop docker
find /var/lib/kubelet | xargs -n 1 findmnt -n -t tmpfs -o TARGET -T | uniq | xargs -r umount -v
rm -r -f /etc/kubernetes /var/lib/kubelet /var/lib/etcd
kubeadm reset
iptables --flush
sudo rm -rf ~/.kube
sudo rm -rf /etc/kubernetes
yum remove -y kubelet kubeadm kubectl
# REBOOT
yum install -y kubelet kubeadm kubectl
systemctl start docker &amp;&amp; systemctl enable docker
systemctl start kubelet &amp;&amp; systemctl enable kubelet
systemctl daemon-reload
systemctl enable --now kubelet
systemctl restart kubelet

======
sysctl net.bridge.bridge-nf-call-iptables=1
======


Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 192.168.1.24:6443 --token a36p8f.6o7qfjvcj9drnm8l \
    --discovery-token-ca-cert-hash sha256:193fc95d70955d949dcc293188695511daeac776a38f3b2aedf7f18d03974618
